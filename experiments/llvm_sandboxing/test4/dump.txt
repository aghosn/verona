Okay that works0
 === 0
Okay that works0
 === 0
TranslationUnitDecl 0x5482f58 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5483860 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5483500 '__int128'
|-TypedefDecl 0x54838d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5483520 'unsigned __int128'
|-TypedefDecl 0x5483c48 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x54839c0 '__NSConstantString_tag'
|   `-CXXRecord 0x5483928 '__NSConstantString_tag'
|-TypedefDecl 0x5483ce0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5483ca0 'char *'
|   `-BuiltinType 0x5483000 'char'
|-TypedefDecl 0x54c6038 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x54c5fe0 '__va_list_tag [1]' 1 
|   `-RecordType 0x5483dd0 '__va_list_tag'
|     `-CXXRecord 0x5483d38 '__va_list_tag'
|-CXXRecordDecl 0x54c6090 <./main.cc:1:1, line:4:1> line:1:8 referenced struct Library definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x54c61a8 <col:1, col:8> col:8 implicit struct Library
| `-CXXMethodDecl 0x54c63d8 <line:3:3, col:33> col:8 used send 'void (int, void *)'
|   |-ParmVarDecl 0x54c6250 <col:13, col:17> col:17 idx 'int'
|   |-ParmVarDecl 0x54c62d0 <col:22, col:28> col:28 ptr 'void *'
|   `-CompoundStmt 0x54c64a0 <col:32, col:33>
|-VarDecl 0x54c64c0 <line:6:1, col:10> col:10 used lib 'Library *'
|-LinkageSpecDecl 0x54c6608 <line:8:1, col:32> col:8 C
| `-FunctionDecl 0x54c67d0 <col:12, col:32> col:16 used foo 'int (int, int)'
|   |-ParmVarDecl 0x54c6670 <col:20, col:24> col:24 used a 'int'
|   `-ParmVarDecl 0x54c66f0 <col:27, col:31> col:31 used b 'int'
|-LinkageSpecDecl 0x54c68a0 <line:11:1, col:22> col:8 C
| `-FunctionDecl 0x54c6938 <col:12, col:22> col:17 food 'void ()'
|-FunctionDecl 0x54c6a30 <line:13:1, line:16:1> line:13:5 bar 'int ()'
| `-CompoundStmt 0x54c6b00 <line:14:1, line:16:1>
|   `-ReturnStmt 0x54c6af0 <line:15:3, col:10>
|     `-IntegerLiteral 0x54c6ad0 <col:10> 'int' 3
|-FunctionDecl 0x54c6c50 <line:18:1, line:30:1> line:18:5 food 'int (int, int)'
| |-ParmVarDecl 0x54c6b30 <col:10, col:14> col:14 used c 'int'
| |-ParmVarDecl 0x54c6bb0 <col:17, col:21> col:21 used d 'int'
| `-CompoundStmt 0x552d4e8 <col:24, line:30:1>
|   |-DeclStmt 0x552ca50 <line:19:3, line:24:4>
|   | `-CXXRecordDecl 0x54c6d10 <line:19:3, line:24:3> line:19:10 referenced struct Argument definition
|   |   |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
|   |   | |-DefaultConstructor exists trivial
|   |   | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
|   |   | |-MoveConstructor exists simple trivial
|   |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
|   |   | |-MoveAssignment exists simple trivial needs_implicit
|   |   | `-Destructor simple irrelevant trivial needs_implicit
|   |   |-CXXRecordDecl 0x54c6e28 <col:3, col:10> col:10 implicit struct Argument
|   |   |-FieldDecl 0x54c6ed0 <line:21:5, col:9> col:9 referenced a 'int'
|   |   |-FieldDecl 0x552c980 <line:22:5, col:9> col:9 referenced b 'int'
|   |   |-FieldDecl 0x552c9e8 <line:23:5, col:9> col:9 referenced ret 'int'
|   |   |-CXXConstructorDecl 0x552caf8 <line:19:10> col:10 implicit used Argument 'void () noexcept' inline default trivial
|   |   | `-CompoundStmt 0x552cf78 <col:10>
|   |   |-CXXConstructorDecl 0x552cbf8 <col:10> col:10 implicit constexpr Argument 'void (const Argument &)' inline default trivial noexcept-unevaluated 0x552cbf8
|   |   | `-ParmVarDecl 0x552cd08 <col:10> col:10 'const Argument &'
|   |   `-CXXConstructorDecl 0x552cdb8 <col:10> col:10 implicit constexpr Argument 'void (Argument &&)' inline default trivial noexcept-unevaluated 0x552cdb8
|   |     `-ParmVarDecl 0x552cec8 <col:10> col:10 'Argument &&'
|   |-DeclStmt 0x552d0c8 <line:25:3, col:16>
|   | `-VarDecl 0x552ca78 <col:3, col:12> col:12 used zoob 'Argument' callinit
|   |   `-CXXConstructExpr 0x552d0a0 <col:12> 'Argument' 'void () noexcept'
|   |-BinaryOperator 0x552d168 <line:26:3, col:12> 'int' lvalue '='
|   | |-MemberExpr 0x552d100 <col:3, col:8> 'int' lvalue .a 0x54c6ed0
|   | | `-DeclRefExpr 0x552d0e0 <col:3> 'Argument' lvalue Var 0x552ca78 'zoob' 'Argument'
|   | `-ImplicitCastExpr 0x552d150 <col:12> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x552d130 <col:12> 'int' lvalue ParmVar 0x54c6b30 'c' 'int'
|   |-BinaryOperator 0x552d210 <line:27:3, col:12> 'int' lvalue '='
|   | |-MemberExpr 0x552d1a8 <col:3, col:8> 'int' lvalue .b 0x552c980
|   | | `-DeclRefExpr 0x552d188 <col:3> 'Argument' lvalue Var 0x552ca78 'zoob' 'Argument'
|   | `-ImplicitCastExpr 0x552d1f8 <col:12> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x552d1d8 <col:12> 'int' lvalue ParmVar 0x54c6bb0 'd' 'int'
|   |-CXXMemberCallExpr 0x552d370 <line:28:3, col:28> 'void'
|   | |-MemberExpr 0x552d268 <col:3, col:8> '<bound member function type>' ->send 0x54c63d8
|   | | `-ImplicitCastExpr 0x552d250 <col:3> 'Library *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x552d230 <col:3> 'Library *' lvalue Var 0x54c64c0 'lib' 'Library *'
|   | |-IntegerLiteral 0x552d298 <col:13> 'int' 0
|   | `-CStyleCastExpr 0x552d348 <col:16, col:24> 'void *' <NoOp>
|   |   `-ImplicitCastExpr 0x552d330 <col:23, col:24> 'void *' <BitCast> part_of_explicit_cast
|   |     `-UnaryOperator 0x552d2d8 <col:23, col:24> 'Argument *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x552d2b8 <col:24> 'Argument' lvalue Var 0x552ca78 'zoob' 'Argument'
|   `-ReturnStmt 0x552d4d8 <line:29:3, col:15>
|     `-ImplicitCastExpr 0x552d4c0 <col:10, col:15> 'int' <LValueToRValue>
|       `-MemberExpr 0x552d490 <col:10, col:15> 'int' lvalue .ret 0x552c9e8
|         `-DeclRefExpr 0x552d470 <col:10> 'Argument' lvalue Var 0x552ca78 'zoob' 'Argument'
|-NamespaceDecl 0x552d528 <verona_interface.cc:2:1, line:3:2> line:2:11 verona
| `-NamespaceDecl 0x552d598 <col:20, line:3:1> line:2:30 __ffi_internal
`-FunctionDecl 0x552d640 prev 0x54c67d0 <line:4:1> col:1 used foo 'int (int, int)'
  |-ParmVarDecl 0x552d6e0 <col:1> col:1 arg0 'int'
  |-ParmVarDecl 0x552d748 <col:1> col:1 arg1 'int'
  |-CompoundStmt 0x5537bd0 <col:1>
  | |-DeclStmt 0x5537940 <col:1>
  | | `-CXXRecordDecl 0x552d7d0 <<invalid sloc>> <invalid sloc> implicit struct tmp_struct definition
  | |   |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_mutable_fields can_const_default_init
  | |   | |-DefaultConstructor exists trivial needs_implicit
  | |   | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | |   | |-MoveConstructor exists simple trivial needs_implicit
  | |   | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param
  | |   | |-MoveAssignment exists simple trivial needs_implicit
  | |   | `-Destructor simple irrelevant trivial needs_implicit
  | |   |-TypeVisibilityAttr 0x552d880 <<invalid sloc>> Implicit Default
  | |   |-FieldDecl 0x5537820 <col:1> col:1 a0 'int' mutable
  | |   |-FieldDecl 0x5537888 <col:1> col:1 a1 'int' mutable
  | |   `-FieldDecl 0x55378f0 <col:1> col:1 ret 'int' mutable
  | |-DeclStmt 0x5537a28 <col:1>
  | | `-VarDecl 0x5537968 <col:1> col:1 used _a_ 'tmp_struct'
  | |   `-UsedAttr 0x55379d0 <<invalid sloc>>
  | |-BinaryOperator 0x5537ae8 <col:1> 'int' lvalue bitfield '='
  | | |-MemberExpr 0x5537ab8 <col:1> 'int' lvalue bitfield .a0 0x5537820
  | | | `-DeclRefExpr 0x5537a88 <col:1> 'tmp_struct' lvalue Var 0x5537968 '_a_' 'tmp_struct'
  | | `-ImplicitCastExpr 0x5537a70 <col:1> 'int' <LValueToRValue> part_of_explicit_cast
  | |   `-DeclRefExpr 0x5537a40 <col:1> 'int' lvalue ParmVar 0x54c6670 'a' 'int'
  | `-BinaryOperator 0x5537bb0 <col:1> 'int' lvalue bitfield '='
  |   |-MemberExpr 0x5537b80 <col:1> 'int' lvalue bitfield .a1 0x5537888
  |   | `-DeclRefExpr 0x5537b50 <col:1> 'tmp_struct' lvalue Var 0x5537968 '_a_' 'tmp_struct'
  |   `-ImplicitCastExpr 0x5537b38 <col:1> 'int' <LValueToRValue> part_of_explicit_cast
  |     `-DeclRefExpr 0x5537b08 <col:1> 'int' lvalue ParmVar 0x54c66f0 'b' 'int'
  `-UsedAttr 0x5537c00 <<invalid sloc>>
DeclRefExpr for Decl not entered in LocalDeclMap?
UNREACHABLE executed at /agent/_work/1/s/clang/lib/CodeGen/CGExpr.cpp:2794!
./cmd: line 3: 11144 Aborted                 ../../../build/dist/verona-interop --dump --explore --targets="targets.txt" --includes="includes.txt" main.cc
